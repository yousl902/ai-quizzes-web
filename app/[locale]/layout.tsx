import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import assets from "@/configs/assets.json";
import "./globals.css";

// 1. Importera Toaster frÃ¥n sonner
import { Toaster } from "sonner";
import NavBar from "@/components/navbar/Navbar";
import { getServerAuthProvider } from "@/lib/auth/factory/getServerProvider";
import Footer from "@/components/Footer";
import { getTranslations } from "next-intl/server";
import { ProfileButton } from "@/components/navbar/ProfileButton";
import { ProfileSection } from "@/components/navbar/ProfileSection";
import { SpeedInsights } from "@vercel/speed-insights/next";

// Dina valfria Google-fonts
const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "MindSwarm Quizes",
  description: "Generated by create next app",
};

// generate static params for all locales
// will make the app static for each locale and time to load will be much faster
export async function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const t = await getTranslations();
  const authProvider = getServerAuthProvider();
  const user = await authProvider.getCurrentUser();

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-bg`}
      >
        <NextIntlClientProvider locale={locale}>
          <Toaster position="bottom-right" />
          <NavBar
            title={t("title")}
            logo={assets.logo}
            user={user}
            ProfileButton={
              <ProfileButton
                firstName={user?.first_name}
                lastName={user?.last_name}
                email={user?.email}
                userId={user?.id}
              />
            }
            ProfileSection={
              <ProfileSection
                firstName={user?.first_name}
                lastName={user?.last_name}
                email={user?.email}
                userId={user?.id}
              />
            }
          />
          {children}
          <Footer title={t("title")} />
          <SpeedInsights />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
